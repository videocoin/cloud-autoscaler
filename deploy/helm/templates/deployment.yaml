apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicasCount | default  "1" }}
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailableCount }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.service.ports.http }}"
    {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      automountServiceAccountToken: true
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash", "-c", "source /vault/secrets/common && source /vault/secrets/config && /autoscaler"]
          ports:
            - containerPort: {{ .Values.service.ports.http }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.ports.http }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.ports.http }}
          env:
            - name: LOGLEVEL
              value: debug
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
          volumeMounts:
            - name: config-files
              mountPath: /etc/autoscaler
      volumes:
        - name: config-files
          configMap:
            name: {{ .Chart.Name }}-files
