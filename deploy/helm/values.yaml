replicasCount: 1
maxUnavailableCount: 1

image:
  repository: registry.videocoin.net/cloud/autoscaler
  tag: latest
  pullPolicy: IfNotPresent
  pullSecrets: 
  - name: regcred

service:
  name: http
  type: NodePort
  ports:
    http: 8013

serviceAccount:
  name: default

resources:
  limits:
   cpu: 200m
   memory: 256Mi
  requests:
   cpu: 200m
   memory: 256Mi

config: {}

annotations:
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/role: "console-autoscaler"
  vault.hashicorp.com/agent-inject-secret-common: "dev-videocoin-net/github-repo/dev-apps-videocoin-net/charts/console/common/config"
  vault.hashicorp.com/agent-inject-secret-config: "dev-videocoin-net/github-repo/dev-apps-videocoin-net/charts/console/autoscaler/config"
  vault.hashicorp.com/agent-inject-template-common: |
    {{ with secret "dev-videocoin-net/github-repo/dev-apps-videocoin-net/charts/console/common/config" }}{{ range $k, $v := .Data }}
    export {{ $k }}='{{ $v }}'
    {{ end }}{{ end }}
  vault.hashicorp.com/agent-inject-template-config: |
    {{ with secret "dev-videocoin-net/github-repo/dev-apps-videocoin-net/charts/console/autoscaler/config" }}{{ range $k, $v := .Data }}
    export {{ $k }}='{{ $v }}'
    {{ end }}{{ end }}

prometheus:
  server:
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 256Mi
  autoscaler:
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
  nodeExporter:
    enabled: false
  kubeStateMetrics:
    enabled: false
  pushgateway:
    enabled: false
  alertmanagerFiles:
    alertmanager.yml: |-
      global:
        # slack_api_url: ''

      receivers:
        - name: default-receiver
        - name: autoscaler
          webhook_configs:
            - url: http://autoscaler.console.svc.cluster.local:8013/prometheus/webhook

      route:
        receiver: default-receiver
        routes: 
          - receiver: autoscaler
            group_wait: 0s
            group_interval: 0s
            repeat_interval: 1m
            match_re:
              alertname: NeedMoreTranscoders|NeedMorePreemtibleTranscoders|NeedLessTranscoders
  serverFiles:
    alerts: |-
      ALERT NeedMoreTranscoders
        IF clamp_max(sum(dispatcher_tasks_total{status="PENDING",type="LIVE"}) WITHOUT (instance, job, status, type) - sum(autoscaler_instances{status="creating"}) WITHOUT (instance, job, status), 3) > 0
        ANNOTATIONS {
            summary = "Need to create {{ $value }} transcoders",
            count = "{{ $value }}"
        }

      ALERT NeedMorePreemtibleTranscoders
        IF clamp_max(sum(dispatcher_tasks_total{status="PENDING",type="VOD"}) WITHOUT (instance, job, status, type) - sum(autoscaler_instances{status="creating"}) WITHOUT (instance, job, status), 3) > 0
        ANNOTATIONS {
            summary = "Need to create preemtible {{ $value }} transcoders",
            count = "{{ $value }}"
        }

      ALERT NeedLessTranscoders
        IF avg_over_time(miners_internal_miner_status{status="IDLE"}[30s]) == 1
        FOR 300s
        ANNOTATIONS {
            summary = "Need to delete {{ $value }} transcoders",
            count = "{{ $value }}"
        }
    rules: ""
    prometheus.yml: |-
      global:
        scrape_interval: 5s
        evaluation_interval: 10s

      rule_files:
        - /etc/config/rules
        - /etc/config/alerts

      scrape_configs:
        - job_name: dispatcher
          static_configs:
            - targets:
              - dispatcher:15008
        - job_name: autoscaler
          static_configs:
            - targets:
              - autoscaler:8013
        - job_name: miners
          static_configs:
            - targets:
              - miners:15011
